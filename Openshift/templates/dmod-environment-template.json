{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "nodejs-mongodb",
    "annotations": {
      "description": "Template for Node.js applications with a MongoDB database, based on OpenShift provided templates 'nodejs-mongodb-example' and 'mongodb-persistent-template'.",
      "tags": "quickstart,nodejs,mongodb",
      "iconClass": "icon-nodejs"
    }
  },
  "labels": {
    "template": "dmod-environment"
  },
  "objects": [
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}data"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "${DATABASE_VOLUME_CAPACITY}"
          }
        }
      }
    },
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}-docs-pvc"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "${DOCUMENT_VOLUME_CAPACITY}"
          }
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
            "port": 3000,
            "targetPort": 3000
          }
        ],
        "selector": {
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "to": {
          "kind": "Service",
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${APP_IMAGE_NAMESPACE}",
                "name": "${APP_IMAGE_NAME}:${APP_DEPLOYMENT_TAG}"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${NAME}",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 3000
                  }
                ],
                "env": [
                  {
                    "name": "MOUNT_POINT_TIMEOUT",
                    "value": "10"
                  },
                  {
                    "name": "MOUNT_POINT_CHECK",
                    "value": "${UPLOAD_PATH}"
                  },
                  {
                    "name": "DATABASE_SERVICE_NAME",
                    "value": "${DATABASE_SERVICE_NAME}"
                  },
				  {
                    "name": "DOCUMENT_MICROSERVICE_NAME",
                    "value": "${DATABASE_SERVICE_NAME}"
                  },
                  {
                    "name": "MONGODB_USER",
                    "value": "${DATABASE_USER}"
                  },
                  {
                    "name": "MONGODB_PASSWORD",
                    "value": "${DATABASE_PASSWORD}"
                  },
                  {
                    "name": "MONGODB_DATABASE",
                    "value": "${DATABASE_NAME}"
                  },
                  {
                    "name": "MONGODB_ADMIN_PASSWORD",
                    "value": "${DATABASE_ADMIN_PASSWORD}"
                  },
                  {
                    "name": "ADMINPW",
                    "value": "${ESM_ADMINPW}"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 3000,
                  "initialDelaySeconds": 3,
                  "httpGet": {
                    "path": "${READINESS_PROBE_URL}",
                    "port": 3000
                  }
                  },
                  "livenessProbe": {
                    "exec": {
                      "command": ["sh","/opt/app-root/src/scripts/mount_test.sh"]
                      },
                      "initialDelaySeconds": 10,
                      "timeoutSeconds": 5,
                      "periodSeconds": 60,
                      "successThreshold": 1,
                      "failureThreshold": 3
                },
                "resources": {
                  "limits": {
                    "memory": "${MEMORY_LIMIT}"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "${NAME}-docs",
                    "mountPath": "${DOCUMENT_MOUNT_PATH}"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "${NAME}-docs",
                "persistentVolumeClaim": {
                  "claimName": "${NAME}-docs-pvc"
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Exposes the database server"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "mongodb",
            "port": 27017,
            "targetPort": 27017
          }
        ],
        "selector": {
          "name": "${DATABASE_SERVICE_NAME}"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Defines how to deploy the database"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "mongodb"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${MONGO_IMAGE_NAMESPACE}",
                "name": "mongodb:3.2"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${DATABASE_SERVICE_NAME}"
        },
        "template": {
          "metadata": {
            "name": "${DATABASE_SERVICE_NAME}",
            "labels": {
              "name": "${DATABASE_SERVICE_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "mongodb",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 27017
                  }
                ],
                "env": [
                  {
                    "name": "MONGODB_USER",
                    "value": "${DATABASE_USER}"
                  },
                  {
                    "name": "MONGODB_PASSWORD",
                    "value": "${DATABASE_PASSWORD}"
                  },
                  {
                    "name": "MONGODB_DATABASE",
                    "value": "${DATABASE_NAME}"
                  },
                  {
                    "name": "MONGODB_ADMIN_PASSWORD",
                    "value": "${DATABASE_ADMIN_PASSWORD}"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 3,
                  "exec": {
                    "command": ["/bin/sh", "-i", "-c", "mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval='quit()'"]

                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 30,
                  "tcpSocket": {
                    "port": 27017
                  }
                },
                "resources": {
                  "limits": {
                    "memory": "${MEMORY_MONGODB_LIMIT}"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "${DATABASE_SERVICE_NAME}-data",
                    "mountPath": "/var/lib/mongodb/data"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "${DATABASE_SERVICE_NAME}-data",
                "persistentVolumeClaim": {
                  "claimName": "${DATABASE_SERVICE_NAME}data"
                }
              }
            ]
          }
        }
      }
    },	
	        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
			    "name": "${DOCUMENT_MICROSERVICE_NAME}",
                "annotations": {
                    "description": "Exposes and load balances the document microservice pods"
                },
                "labels": {
                    "template": "dmod-environment"
                },
                "app": "${DOCUMENT_MICROSERVICE_NAME}"
            },
            "spec": {
                "ports": [
                    {
                        "name": "web",
                        "port": 8080,
                        "protocol": "TCP",
                        "targetPort": 8080
                    },
                    {
                        "containerPort": 9779,
                        "name": "metrics",
                        "port": 9779,
                        "protocol": "TCP"
                    },
                    {
                        "containerPort": 8778,
                        "name": "jolokia",
                        "port": 8778,
                        "protocol": "TCP"
                    }
                ],
                "selector": {
                    "name": "${DOCUMENT_MICROSERVICE_NAME}"
                }
            }
        },        
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "creationTimestamp": null,
                "generation": 1,
                "labels": {
                    "app": "${DOCUMENT_MICROSERVICE_NAME}",
                    "component": "fuse-server",
                    "container": "java",
                    "group": "quickstarts",
                    "project": "${DOCUMENT_MICROSERVICE_NAME}",
                    "provider": "s2i",
                    "template": "dmod-environment"                    
                },
                "name": "document-microservice"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "component": "${DOCUMENT_MICROSERVICE_NAME}",
                    "container": "java",
                    "deploymentconfig": "${DOCUMENT_MICROSERVICE_NAME}",
                    "group": "quickstarts",
                    "project": "${DOCUMENT_MICROSERVICE_NAME}",
                    "provider": "s2i",
                    "version": "2.2.0.redhat-079"
                },
                "strategy": {
                    "resources": {},
                    "rollingParams": {
                        "intervalSeconds": 1,
                        "maxSurge": "25%",
                        "maxUnavailable": "25%",
                        "timeoutSeconds": 600,
                        "updatePeriodSeconds": 1
                    },
                    "type": "Rolling"
                },
                "template": {
                    "metadata": {                        
                        "creationTimestamp": null,
                        "labels": {
                            "app": "${DOCUMENT_MICROSERVICE_NAME}",
                            "component": "${DOCUMENT_MICROSERVICE_NAME}",
                            "container": "java",
                            "deploymentconfig": "document-microservice",
                            "group": "quickstarts",
                            "project": "document-microservice",
                            "provider": "s2i",
                            "version": "2.2.0.redhat-079"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "HTTP_PORT",
                                        "value": "8080"
                                    },
                                    {
                                        "name": "BACKEND_NAME",
                                        "value": "server"
                                    }
                                ],
                                "image": "library/fuse-server:latest",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "(curl -f 127.0.0.1:8080) \u003e/dev/null 2\u003e\u00261; test $? != 7"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "document-microservice",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9779,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8778,
                                        "name": "jolokia",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "(curl -f 127.0.0.1:8080) \u003e/dev/null 2\u003e\u00261; test $? != 7"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30
                    }
                },
                "test": false,
                "triggers": [
                    {
                        "type": "ConfigChange"
                    },
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "document-microservice"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "document-microservice:latest",
                                "namespace": "csnr-dmod-tools"
                            }
                        },
                        "type": "ImageChange"
                    }
                ]
            },
            "status": {}
        }

  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "required": true,
      "value": "dmod"
    },
    {
      "name": "MONGO_IMAGE_NAMESPACE",
      "displayName": "mongo image namespace",
      "description": "The OpenShift Namespace where the mongo ImageStream resides.",
      "value": "openshift"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "description": "Maximum amount of memory the Node.js container can use.",
      "value": "512Mi"
    },
    {
      "name": "MEMORY_MONGODB_LIMIT",
      "displayName": "Memory Limit (MongoDB)",
      "description": "Maximum amount of memory the MongoDB container can use.",
      "value": "512Mi"
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.",
      "value": ""
    },
    {
      "name": "DATABASE_SERVICE_NAME",
      "displayName": "Database Service Name",
      "value": "mongodb"
    },
	{
      "name": "DOCUMENT_MICROSERVICE_NAME",
      "displayName": "Document Microservice Name",
      "value": "document-microservice"
    },
    {
      "name": "DATABASE_USER",
      "displayName": "MongoDB Username",
      "description": "Username for MongoDB user that will be used for accessing the database.",
      "generate": "expression",
      "from": "user[A-Z0-9]{3}"
    },
    {
      "name": "DATABASE_PASSWORD",
      "displayName": "MongoDB Password",
      "description": "Password for the MongoDB user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "DATABASE_NAME",
      "displayName": "Database Name",
      "value": "dmod"
    },
    {
      "name": "DATABASE_ADMIN_PASSWORD",
      "displayName": "Database Administrator Password",
      "description": "Password for the database admin user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "PORT",
      "displayName": "Application port",
      "description": "Port that application is listening on for requests.",
      "value": "3000",
      "required": true
    },
    {
      "name": "READINESS_PROBE_URL",
      "displayName": "Readiness probe URL",
      "description": "URL that can be used to determine if application is 'ready'.",
      "value": "/guidance",
      "required": true
    },
    {
      "name": "LIVENESS_PROBE_URL",
      "displayName": "Liveness probe URL",
      "description": "URL that can be used to determine if application is 'live'.",
      "value": "/guidance",
      "required": true
    },
    {
      "name": "DATABASE_VOLUME_CAPACITY",
      "displayName": "Database Volume Capacity",
      "description": "Volume space available for mongo database, e.g. 512Mi, 2Gi.",
      "value": "1Gi",
      "required": true
    },
    {
      "name": "DOCUMENT_VOLUME_CAPACITY",
      "displayName": "Document Volume Capacity",
      "description": "Volume space available for Document uploads, e.g. 512Mi, 2Gi.",
      "value": "2Gi",
      "required": true
    },
    {
      "name": "DOCUMENT_MOUNT_PATH",
      "displayName": "Document Mount Path",
      "description": "Path in container where document volume should be mounted.",
      "value": "/uploads",
      "required": true
    },
    {
      "name": "ESM_ADMINPW",
      "displayName": "ESM Admin password",
      "description": "Initital ESM Admin password.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "APP_IMAGE_NAME",
      "displayName": "Application image name.",
      "description": "Application image name.",
      "value": "dmod",
      "required": true
    },
    {
      "name": "APP_IMAGE_NAMESPACE",
      "displayName": "Namespace containing application images.",
      "description": "Namespace containing application images.",
      "value": "csnr-dmod-tools",
      "required": true
    },
    {
      "name": "APP_DEPLOYMENT_TAG",
      "displayName": "Image tag to watch for changes and trigger deployment.",
      "description": "Image tag to watch for changes and trigger deployment.",
      "value": "dev",
      "required": true
    }
  ]
}
